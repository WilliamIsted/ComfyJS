{"version":3,"file":"comfy.min.js","sources":["../src/util.ts","../src/parse.ts","../src/socket.ts","../src/twitch.ts","../src/index.ts","../src/comfy.ts"],"sourcesContent":["// Escape values for IRC messages (https://ircv3.net/specs/extensions/message-tags.html#escaping-values)\nexport function unescapeIRC( text : string ) : string {\n\tif( !text || typeof text !== \"string\" || !text.includes( \"\\\\\" ) ) {\n\t\treturn text;\n\t}\n\treturn text.replace( /\\\\(.)/g, ( _, char ) => {\n\t\tswitch( char ) {\n\t\tcase \"\\\\\": return \"\\\\\";\n\t\tcase \":\": return \";\";\n\t\tcase \"s\": return \" \";\n\t\tcase \"r\": return \"\\r\";\n\t\tcase \"n\": return \"\\n\";\n\t\tdefault: return char;\n\t\t}\n\t} );\n}\n","import { unescapeIRC } from \"./util\";\n\nexport type ParsedMessage = {\n\traw : string,\n\ttags : { [ name : string ] : string },\n\tsource : string | null,\n\tcommand : string | null,\n\tparameters : string | null,\n};\n\nfunction extractComponent( message : string, index : number ) : { component : string, nextIndex : number } {\n\tconst nextSpace = message.indexOf( \" \", index );\n\tconst rawComponent = message.slice( index + 1, nextSpace );\n\treturn {\n\t\tcomponent: rawComponent,\n\t\tnextIndex: nextSpace + 1,\n\t};\n}\n\n// --- Message parsing based on the IRC v3.2 spec (https://ircv3.net/irc/) ---\n/*\nAccording to IRC v3.2 spec (https://ircv3.net/specs/extensions/message-tags) the messages are formatted as follows:\n\n<message>       ::= ['@' <tags> <SPACE>] [':' <prefix> <SPACE> ] <command> [params] <crlf>\n<tags>          ::= <tag> [';' <tag>]*\n<tag>           ::= <key> ['=' <escaped_value>]\n<key>           ::= [ <client_prefix> ] [ <vendor> '/' ] <key_name>\n<client_prefix> ::= '+'\n<key_name>      ::= <non-empty sequence of ascii letters, digits, hyphens ('-')>\n<escaped_value> ::= <sequence of zero or more utf8 characters except NUL, CR, LF, semicolon (`;`) and SPACE>\n<vendor>        ::= <host>\n*/\nexport function parseMessage( message : string ) : ParsedMessage {\n\tconst parsedMessage : ParsedMessage = {\n\t\traw: message,\n\t\ttags: {},\n\t\tsource: null,\n\t\tcommand: null,\n\t\tparameters: null,\n\t};\n\n\tlet index = 0;\n\n\t// --- Tags Parsing ---\n\t// Check for tags at the beginning of the IRC message indicated by @\n\t// e.g. @emote-only=0;followers-only=-1;r9k=0;room-id=83118047;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #instafluff\n\t// The above has tags and then the normal messages start after a space\n\tif( message[ 0 ] === \"@\" ) {\n\t\t// console.debug( \"This message contains tags\" );\n\t\tconst { component, nextIndex } = extractComponent( message, 0 );\n\t\tfor( const tag of component.split( \";\" ) ) {\n\t\t\tconst tagSplitIndex = tag.indexOf( \"=\" );\n\t\t\tconst key = tag.substring( 0, tagSplitIndex );\n\t\t\tconst value = tag.substring( tagSplitIndex + 1 );\n\t\t\t// Optimizations for common tags that won't be escaped\n\t\t\tswitch( key ) {\n\t\t\tcase \"emote-sets\":\n\t\t\tcase \"ban-duration\":\n\t\t\tcase \"bits\":\n\t\t\tcase \"id\":\n\t\t\tcase \"room-id\":\n\t\t\tcase \"color\":\n\t\t\tcase \"login\":\n\t\t\t\tparsedMessage.tags[ key ] = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tparsedMessage.tags[ key ] = unescapeIRC( value );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tindex = nextIndex; // Should now point to source colon (:).\n\t}\n\n\t// --- Source Parsing ---\n\t// Get the source component (nick and host) of the IRC message.\n\t// The idx should point to the source part; otherwise, it's a PING command.\n\tif( message[ index ] === \":\" ) {\n\t\t// console.debug( \"This message has a source component\" );\n\t\tconst { component, nextIndex } = extractComponent( message, index );\n\t\tparsedMessage.source = component;\n\t\tindex = nextIndex; // Should point to the command part of the message.\n\t}\n\n\t// --- Command Parsing ---\n\t// Get the remainder of the IRC message as a command\n\tif( index < message.length ) {\n\t\t// console.debug( \"This message has a command component\" );\n\t\tconst rawCommand = message.slice( index ).trim();\n\t\tconst commandEnd = rawCommand.indexOf( \":\" );\n\t\tparsedMessage.command = rawCommand.slice( 0, commandEnd < 0 ? undefined : commandEnd ).trim();\n\t\t\n\t\t// Parse the parameters\n\t\tconst parameterIndex = message.indexOf( \":\", index );\n\t\tif( parameterIndex >= 0 ) {\n\t\t\t// console.debug( \"This message has command parameters\" );\n\t\t\tparsedMessage.parameters = message.slice( parameterIndex + 1 );\n\t\t}\n\t}\n\n\treturn parsedMessage;\n}\n","const _WebSocket = globalThis.WebSocket || require( \"ws\" );\n\nexport function createWebSocket( server : string | URL, protocols? : string | undefined ) : WebSocket {\n\treturn new _WebSocket( server, protocols );\n}\n","import { ParsedMessage } from \"./parseFast\";\n\nexport enum TwitchEventType {\n\tNone = \"none\",\n\tPing = \"Ping\",\n\tPong = \"Pong\",\n\tConnect = \"connect\",\n\tReconnect = \"reconnect\",\n\tError = \"error\",\n\tWarning = \"Warning\",\n\tChatMode = \"chatmode\",\n\tClearChat = \"ClearChat\",\n\tRoomState = \"roomstate\",\n\tGlobalUserState = \"globaluserstate\",\n\tUserState = \"userstate\",\n\tNotice = \"notice\",\n\tJoin = \"join\",\n\tLeave = \"leave\",\n\tCommand = \"command\",\n\tChat = \"message\",\n\tReply = \"reply\",\n\tWhisper = \"whisper\",\n\tAnnouncement = \"announcement\",\n\tCheer = \"Cheer\",\n\tSubscribe = \"sub\",\n\tResubscribe = \"resub\",\n\tSubGift = \"subgift\",\n\tMysterySubGift = \"submysterygift\",\n\tSubGiftContinue = \"subgiftcontinue\",\n\tRaid = \"raid\",\n\tUnraid = \"unraid\",\n\tTimeout = \"Timeout\",\n\tBan = \"Ban\",\n\tMessageDeleted = \"MessageDeleted\",\n\t// Experimental\n\tViewerMilestone = \"ViewerMilestone\",\n\tAll = \"all\",\n};\n\nexport enum TwitchMessageFlag {\n\tAggressiveContent = \"aggressive\",\n\tIdentityBasedHate = \"identity-hate\",\n\tProfaneContent = \"profane\",\n\tSexualContent = \"sexual\",\n};\n\nconst TwitchUserTypes : { [ key : string ] : string } = {\n\t\"\": \"Normal\",\n\t\"admin\": \"Admin\",\n\t\"global_mod\": \"Global Mod\",\n\t\"staff\": \"Staff\",\n\t\"mod\": \"Moderator\",\n};\n\nexport type ProcessedMessage = {\n    type : TwitchEventType,\n    data? : any,\n\textra? : any,\n};\n\nfunction parseUsername( source : string | null ) {\n\tconst parts = ( source as string ).split( \"!\" );\n\treturn parts.length > 1 ? parts[ 0 ] : undefined;\n}\n\nfunction parseBadges( badgesTag : string ) : { [ key : string ] : string } | undefined {\n\tif( !badgesTag ) { return undefined; }\n\tconst badgeList = badgesTag.split( \",\" );\n\tconst badges : { [ key : string ] : string } = {};\n\tfor( const badge of badgeList ) {\n\t\tconst [ name, version ] = badge.split( \"/\" );\n\t\tbadges[ name ] = version;\n\t}\n\treturn badges;\n}\n\nfunction parseMessageFlags( flagsTag : string ) {\n\tif( !flagsTag ) { return undefined; }\n\tconst flagsList = flagsTag.split( \",\" );\n\tconst flags : Partial<{ [ key in TwitchMessageFlag ] : number | undefined }> = {};\n\tfor( const flag of flagsList ) {\n\t\tconst [ , label ] = flag.split( \":\" );\n\t\tconst [ category, level ] = label.split( \".\" );\n\t\tswitch( category ) {\n\t\tcase \"A\":\n\t\t\tflags[ TwitchMessageFlag.AggressiveContent ] = Math.max( flags[ TwitchMessageFlag.AggressiveContent ] || 0, parseInt( level ) );\n\t\t\tbreak;\n\t\tcase \"I\":\n\t\t\tflags[ TwitchMessageFlag.IdentityBasedHate ] = Math.max( flags[ TwitchMessageFlag.IdentityBasedHate ] || 0, parseInt( level ) );\n\t\t\tbreak;\n\t\tcase \"P\":\n\t\t\tflags[ TwitchMessageFlag.ProfaneContent ] = Math.max( flags[ TwitchMessageFlag.ProfaneContent ] || 0, parseInt( level ) );\n\t\t\tbreak;\n\t\tcase \"S\":\n\t\t\tflags[ TwitchMessageFlag.SexualContent ] = Math.max( flags[ TwitchMessageFlag.SexualContent ] || 0, parseInt( level ) );\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn flags;\n}\n\nfunction handleChatMessage( message : ParsedMessage, channel : string ) : ProcessedMessage {\n\tconst isAction = message.parameters?.startsWith( \"\\u0001ACTION\" );\n\tconst sanitizedMessage = isAction ? message.parameters?.match( /^\\u0001ACTION ([^\\u0001]+)\\u0001$/ )![ 1 ] : message.parameters;\n\n\tconst id = message.tags[ \"id\" ];\n\tconst channelId = message.tags[ \"room-id\" ];\n\tconst userId = message.tags[ \"user-id\" ];\n\tconst username = parseUsername( message.source );\n\tconst displayName = message.tags[ \"display-name\" ] || message.tags[ \"login\" ] || username;\n\tconst userType = TwitchUserTypes[ message.tags[ \"user-type\" ] ];\n\tconst badgeInfo =  message.tags[ \"badge-info\" ] ? parseBadges( message.tags[ \"badge-info\" ] ) : undefined;\n\tconst badges = message.tags[ \"badges\" ] ? parseBadges( message.tags[ \"badges\" ] ) : undefined;\n\tconst userColor = message.tags[ \"color\" ] || undefined;\n\tconst emotes = message.tags[ \"emotes\" ];\n\tconst messageFlags = message.tags[ \"flags\" ];\n\tconst contentFlags = undefined; // parseMessageFlags( messageFlags );\n\tconst isBroadcaster = username === channel;\n\tconst isMod = message.tags[ \"mod\" ] === \"1\";\n\tconst isFounder = badges ? !!badges[ \"founder\" ] : false;\n\tconst isSubscriber = message.tags[ \"subscriber\" ] === \"1\";\n\tconst isTurbo = message.tags[ \"turbo\" ] === \"1\";\n\tconst isVIP = badges ? !!badges[ \"vip\" ] : false;\n\tconst isPrime = badges ? !!badges[ \"premium\" ] : false;\n\tconst isPartner = badges ? !![ \"partner\" ] : false;\n\tconst isGameDeveloper = badges ? !!badges[ \"game-developer\" ] : false;\n\tconst timestamp = parseInt( message.tags[ \"tmi-sent-ts\" ] );\n\t\n\tconst isEmoteOnly = message.tags[ \"emote-only\" ] === \"1\";\n\tconst isHighlightedMessage = message.tags[ \"msg-id\" ] === \"highlighted-message\";\n\tconst isSkipSubsModeMessage = message.tags[ \"msg-id\" ] === \"skip-subs-mode-message\";\n\tconst customRewardId = message.tags[ \"custom-reward-id\" ] || null;\n\n\t// TODO: Look into the \"first-msg\" and \"returning-chatter\" tags\n\tconst isFirstMessage = message.tags[ \"first-msg\" ] === \"1\";\n\tconst isReturningChatter = message.tags[ \"returning-chatter\" ] === \"1\";\n\n\tconst flags = {\n\t\tbroadcaster: isBroadcaster,\n\t\tmod: isMod,\n\t\tfounder: isFounder,\n\t\tsubscriber: isSubscriber,\n\t\tvip: isVIP,\n\t\tpartner: isPartner,\n\t\tgameDeveloper: isGameDeveloper,\n\t\tturbo: isTurbo,\n\t\tprime: isPrime,\n\t\thighlighted: isHighlightedMessage,\n\t\tskipSubsMode: isSkipSubsModeMessage,\n\t\tcustomReward: !!customRewardId,\n\t\temoteOnly: isEmoteOnly,\n\t\tfirstMessage: isFirstMessage,\n\t\treturningChatter: isReturningChatter,\n\t};\n\n\tif( message.tags[ \"bits\" ] ) {\n\t\treturn {\n\t\t\ttype: TwitchEventType.Cheer,\n\t\t\tdata: {\n\t\t\t\tchannel,\n\t\t\t\tchannelId,\n\t\t\t\tdisplayName,\n\t\t\t\tusername,\n\t\t\t\tuserId,\n\t\t\t\tuserType,\n\t\t\t\tid,\n\t\t\t\tmessage: message.parameters,\n\t\t\t\tmessageType: isAction ? \"action\" : \"chat\", // TODO: Can bits be an action?\n\t\t\t\tmessageEmotes: emotes,\n\t\t\t\tmessageFlags,\n\t\t\t\tcontentFlags,\n\t\t\t\tisEmoteOnly,\n\t\t\t\tsubscriber: isSubscriber,\n\t\t\t\tuserColor,\n\t\t\t\tuserBadgeInfo: badgeInfo,\n\t\t\t\tuserBadges: badges,\n\t\t\t\tcustomRewardId,\n\t\t\t\tflags,\n\t\t\t\tbits: parseInt( message.tags[ \"bits\" ] ),\n\t\t\t\ttimestamp,\n\t\t\t\textra: {\n\t\t\t\t\t...message.tags,\n\t\t\t\t\tflags: messageFlags || null,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\telse {\n\t\tif( sanitizedMessage?.startsWith( \"!\" ) ) {\n\t\t\tconst msgParts = sanitizedMessage!.split( / (.*)/ );\n\t\t\tconst command = msgParts[ 0 ].substring( 1 ).toLowerCase();\n\t\t\tconst msg = msgParts[ 1 ] || \"\";\n\t\t\treturn {\n\t\t\t\ttype: TwitchEventType.Command,\n\t\t\t\tdata: {\n\t\t\t\t\tchannel,\n\t\t\t\t\tchannelId,\n\t\t\t\t\tdisplayName,\n\t\t\t\t\tusername,\n\t\t\t\t\tuserId,\n\t\t\t\t\tuserType,\n\t\t\t\t\tcommand: command,\n\t\t\t\t\tid,\n\t\t\t\t\tmessage: msg,\n\t\t\t\t\tmessageType: isAction ? \"action\" : \"chat\",\n\t\t\t\t\tmessageEmotes: emotes,\n\t\t\t\t\tmessageFlags,\n\t\t\t\t\tcontentFlags,\n\t\t\t\t\tisEmoteOnly,\n\t\t\t\t\tuserColor,\n\t\t\t\t\tuserBadgeInfo: badgeInfo,\n\t\t\t\t\tuserBadges: badges,\n\t\t\t\t\tcustomRewardId,\n\t\t\t\t\tflags,\n\t\t\t\t\ttimestamp,\n\t\t\t\t\textra: {\n\t\t\t\t\t\t...message.tags,\n\t\t\t\t\t\tflags: messageFlags || null,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn {\n\t\t\t\ttype: TwitchEventType.Chat,\n\t\t\t\tdata: {\n\t\t\t\t\tchannel,\n\t\t\t\t\tchannelId,\n\t\t\t\t\tdisplayName,\n\t\t\t\t\tusername,\n\t\t\t\t\tuserId,\n\t\t\t\t\tuserType,\n\t\t\t\t\tid,\n\t\t\t\t\tmessage: sanitizedMessage,\n\t\t\t\t\tmessageType: isAction ? \"action\" : \"chat\",\n\t\t\t\t\tmessageEmotes: emotes,\n\t\t\t\t\tmessageFlags,\n\t\t\t\t\tcontentFlags,\n\t\t\t\t\tisEmoteOnly,\n\t\t\t\t\tuserColor,\n\t\t\t\t\tuserBadgeInfo: badgeInfo,\n\t\t\t\t\tuserBadges: badges,\n\t\t\t\t\tcustomRewardId,\n\t\t\t\t\tflags,\n\t\t\t\t\ttimestamp,\n\t\t\t\t\textra: {\n\t\t\t\t\t\t...message.tags,\n\t\t\t\t\t\tflags: messageFlags || null,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport function processMessage( message : ParsedMessage ) : ProcessedMessage | null {\n\ttry {\n\t\tif( message.command ) { // Twitch-Specific Tags: https://dev.twitch.tv/docs/irc/tags/\n\t\t\tconst commandParts = message.command.split( \" \" );\n\t\t\tconst channel = commandParts.length > 1 ? commandParts[ 1 ].substring( 1 ) : undefined;\n\t\t\tswitch( commandParts[ 0 ] ) {\n\t\t\tcase \"PING\":\n\t\t\t\treturn { type: TwitchEventType.Ping\t};\n\t\t\tcase \"PONG\":\n\t\t\t\treturn { type: TwitchEventType.Pong\t};\n\t\t\tcase \"CAP\": // Capabilities Confirmation\n\t\t\t\t// console.debug( \"capabilities\", message.parameters );\n\t\t\t\treturn null;\n\t\t\tcase \"JOIN\":\n\t\t\t\treturn {\n\t\t\t\t\ttype: TwitchEventType.Join,\n\t\t\t\t\tdata: { channel, username: parseUsername( message.source ) },\n\t\t\t\t}\n\t\t\tcase \"PART\":\n\t\t\t\treturn {\n\t\t\t\t\ttype: TwitchEventType.Leave,\n\t\t\t\t\tdata: { channel, username: parseUsername( message.source ) },\n\t\t\t\t}\n\t\t\tcase \"ROOMSTATE\":\n\t\t\t\treturn {\n\t\t\t\t\ttype: TwitchEventType.RoomState,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t// Only add the properties if they exist\n\t\t\t\t\t\t...( message.tags[ \"broadcaster-lang\" ] && { broadcasterLanguage: message.tags[ \"broadcaster-lang\" ] } ),\n\t\t\t\t\t\t...( message.tags[ \"emote-only\" ] && { emoteOnly: message.tags[ \"emote-only\" ] !== \"0\" } ),\n\t\t\t\t\t\t...( message.tags[ \"followers-only\" ] && { followersOnly: message.tags[ \"followers-only\" ] !== \"-1\" } ),\n\t\t\t\t\t\t...( message.tags[ \"subs-only\" ] && { subscribersOnly: message.tags[ \"subs-only\" ] !== \"0\" } ),\n\t\t\t\t\t\t...( message.tags[ \"r9k\" ] && { r9k: message.tags[ \"r9k\" ] !== \"0\" } ),\n\t\t\t\t\t\t...( message.tags[ \"rituals\" ] && { rituals: message.tags[ \"rituals\" ] !== \"0\" } ),\n\t\t\t\t\t\t...( message.tags[ \"slow\" ] && { slow: message.tags[ \"slow\" ] !== \"0\" } ),\n\t\t\t\t\t\tchannel,\n\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\tcase \"GLOBALUSERSTATE\":\n\t\t\t\treturn {\n\t\t\t\t\ttype: TwitchEventType.GlobalUserState,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tdisplayName: message.tags[ \"display-name\" ],\n\t\t\t\t\t\tuserId: message.tags[ \"user-id\" ],\n\t\t\t\t\t\tuserType: TwitchUserTypes[ message.tags[ \"user-type\" ] ],\n\t\t\t\t\t\tcolor: message.tags[ \"color\" ],\n\t\t\t\t\t\tbadges: message.tags[ \"badges\" ],\n\t\t\t\t\t\tbadgeInfo: message.tags[ \"badge-info\" ],\n\t\t\t\t\t\temoteSets: message.tags[ \"emote-sets\" ],\n\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\tcase \"USERSTATE\":\n\t\t\t\treturn {\n\t\t\t\t\ttype: TwitchEventType.UserState,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tchannel: channel,\n\t\t\t\t\t\tdisplayName: message.tags[ \"display-name\" ],\n\t\t\t\t\t\tuserId: message.tags[ \"user-id\" ],\n\t\t\t\t\t\tuserType: TwitchUserTypes[ message.tags[ \"user-type\" ] ],\n\t\t\t\t\t\tcolor: message.tags[ \"color\" ],\n\t\t\t\t\t\tbadgeInfo: message.tags[ \"badge-info\" ] ? parseBadges( message.tags[ \"badge-info\" ] ) : undefined,\n\t\t\t\t\t\tbadges: message.tags[ \"badges\" ] ? parseBadges( message.tags[ \"badges\" ] ) : undefined,\n\t\t\t\t\t\temoteSets: message.tags[ \"emote-sets\" ],\n\t\t\t\t\t\t...( message.tags[ \"id\" ] && { id: message.tags[ \"id\" ] } ),\n\t\t\t\t\t\tmod: message.tags[ \"mod\" ] === \"1\",\n\t\t\t\t\t\tsubscriber: message.tags[ \"subscriber\" ] === \"1\",\n\t\t\t\t\t\tturbo: message.tags[ \"turbo\" ] === \"1\",\n\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\tcase \"HOSTTARGET\": // No longer supported\n\t\t\t\tbreak;\n\t\t\tcase \"USERNOTICE\":\n\t\t\t\tswitch( message.tags[ \"msg-id\" ] ) {\n\t\t\t\tcase \"announcement\":\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: TwitchEventType.Announcement,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tdisplayName: message.tags[ \"display-name\" ] || message.tags[ \"login\" ],\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t\t\tusername: message.tags[ \"login\" ],\n\t\t\t\t\t\t\tuserId: message.tags[ \"user-id\" ],\n\t\t\t\t\t\t\tmessage: message.parameters,\n\t\t\t\t\t\t\tmessageType: message.tags[ \"msg-id\" ],\n\t\t\t\t\t\t\tmessageEmotes: message.tags[ \"emotes\" ],\n\t\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\tcase \"sub\":\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: TwitchEventType.Subscribe,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tid: message.tags[ \"id\" ],\n\t\t\t\t\t\t\tdisplayName: message.tags[ \"display-name\" ] || message.tags[ \"login\" ],\n\t\t\t\t\t\t\tmonths: parseInt( message.tags[ \"msg-param-months\" ] ),\n\t\t\t\t\t\t\tmultiMonthDuration: parseInt( message.tags[ \"msg-param-multimonth-duration\" ] ),\n\t\t\t\t\t\t\tmultiMonthTenure: parseInt( message.tags[ \"msg-param-multimonth-tenure\" ] ),\n\t\t\t\t\t\t\tshouldShareStreak: message.tags[ \"msg-param-should-share-streak\" ] === \"1\",\n\t\t\t\t\t\t\tsubPlan: message.tags[ \"msg-param-sub-plan\" ],\n\t\t\t\t\t\t\tsubPlanName: message.tags[ \"msg-param-sub-plan-name\" ],\n\t\t\t\t\t\t\twasGifted: message.tags[ \"msg-param-was-gifted\" ] === \"true\",\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-contribution-type\" ] && { goalContributionType: message.tags[ \"msg-param-goal-contribution-type\" ] } ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-current-contributions\" ] && { goalCurrentContributions: parseInt( message.tags[ \"msg-param-goal-current-contributions\" ] ) } ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-description\" ] && { goalDescription: message.tags[ \"msg-param-goal-description\" ] } ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-target-contributions\" ] && { goalTargetContributions: parseInt( message.tags[ \"msg-param-goal-target-contributions\" ] ) } ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-user-contributions\" ] && { goalUserContributions: parseInt( message.tags[ \"msg-param-goal-user-contributions\" ] ) } ),\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t\t\tusername: message.tags[ \"login\" ],\n\t\t\t\t\t\t\tuserId: message.tags[ \"user-id\" ],\n\t\t\t\t\t\t\tuserType: TwitchUserTypes[ message.tags[ \"user-type\" ] ],\n\t\t\t\t\t\t\tuserBadgeInfo: message.tags[ \"badge-info\" ] ? parseBadges( message.tags[ \"badge-info\" ] ) : undefined,\n\t\t\t\t\t\t\tuserBadges: message.tags[ \"badges\" ] ? parseBadges( message.tags[ \"badges\" ] ) : undefined,\n\t\t\t\t\t\t\tuserColor: message.tags[ \"color\" ] || undefined,\n\t\t\t\t\t\t\tmessage: message.parameters,\n\t\t\t\t\t\t\tmessageType: message.tags[ \"msg-id\" ],\n\t\t\t\t\t\t\tmessageEmotes: message.tags[ \"emotes\" ],\n\t\t\t\t\t\t\tmessageFlags: message.tags[ \"flags\" ],\n\t\t\t\t\t\t\tcontentFlags: parseMessageFlags( message.tags[ \"flags\" ] ),\n\t\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\tcase \"resub\":\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: TwitchEventType.Resubscribe,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tid: message.tags[ \"id\" ],\n\t\t\t\t\t\t\tdisplayName: message.tags[ \"display-name\" ] || message.tags[ \"login\" ],\n\t\t\t\t\t\t\tcumulativeMonths: parseInt( message.tags[ \"msg-param-cumulative-months\" ] ),\n\t\t\t\t\t\t\tmonths: parseInt( message.tags[ \"msg-param-months\" ] ),\n\t\t\t\t\t\t\tmultiMonthDuration: parseInt( message.tags[ \"msg-param-multimonth-duration\" ] ),\n\t\t\t\t\t\t\tmultiMonthTenure: parseInt( message.tags[ \"msg-param-multimonth-tenure\" ] ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-streak-months\" ] && { streakMonths: parseInt( message.tags[ \"msg-param-streak-months\" ] ) } ),\n\t\t\t\t\t\t\tshouldShareStreak: message.tags[ \"msg-param-should-share-streak\" ] === \"1\",\n\t\t\t\t\t\t\tsubPlan: message.tags[ \"msg-param-sub-plan\" ],\n\t\t\t\t\t\t\tsubPlanName: message.tags[ \"msg-param-sub-plan-name\" ],\n\t\t\t\t\t\t\twasGifted: message.tags[ \"msg-param-was-gifted\" ] === \"true\",\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t\t\tusername: message.tags[ \"login\" ],\n\t\t\t\t\t\t\tuserId: message.tags[ \"user-id\" ],\n\t\t\t\t\t\t\tuserType: TwitchUserTypes[ message.tags[ \"user-type\" ] ],\n\t\t\t\t\t\t\tuserBadgeInfo: message.tags[ \"badge-info\" ] ? parseBadges( message.tags[ \"badge-info\" ] ) : undefined,\n\t\t\t\t\t\t\tuserBadges: message.tags[ \"badges\" ] ? parseBadges( message.tags[ \"badges\" ] ) : undefined,\n\t\t\t\t\t\t\tuserColor: message.tags[ \"color\" ] || undefined,\n\t\t\t\t\t\t\tmessage: message.parameters,\n\t\t\t\t\t\t\tmessageType: message.tags[ \"msg-id\" ],\n\t\t\t\t\t\t\tmessageEmotes: message.tags[ \"emotes\" ],\n\t\t\t\t\t\t\tmessageFlags: message.tags[ \"flags\" ],\n\t\t\t\t\t\t\tcontentFlags: parseMessageFlags( message.tags[ \"flags\" ] ),\n\t\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\tcase \"submysterygift\":\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: TwitchEventType.MysterySubGift,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tid: message.tags[ \"id\" ],\n\t\t\t\t\t\t\tdisplayName: message.tags[ \"display-name\" ] || message.tags[ \"login\" ],\n\t\t\t\t\t\t\tgiftCount: parseInt( message.tags[ \"msg-param-mass-gift-count\" ] ),\n\t\t\t\t\t\t\tsenderCount: parseInt( message.tags[ \"msg-param-sender-count\" ] || \"0\" ),\n\t\t\t\t\t\t\tsubPlan: message.tags[ \"msg-param-sub-plan\" ],\n\t\t\t\t\t\t\tsubPlanName: message.tags[ \"msg-param-sub-plan-name\" ],\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-contribution-type\" ] && { goalContributionType: message.tags[ \"msg-param-goal-contribution-type\" ] } ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-current-contributions\" ] && { goalCurrentContributions: parseInt( message.tags[ \"msg-param-goal-current-contributions\" ] ) } ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-description\" ] && { goalDescription: message.tags[ \"msg-param-goal-description\" ] } ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-target-contributions\" ] && { goalTargetContributions: parseInt( message.tags[ \"msg-param-goal-target-contributions\" ] ) } ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-user-contributions\" ] && { goalUserContributions: parseInt( message.tags[ \"msg-param-goal-user-contributions\" ] ) } ),\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t\t\tusername: message.tags[ \"login\" ],\n\t\t\t\t\t\t\tuserId: message.tags[ \"user-id\" ],\n\t\t\t\t\t\t\tuserType: TwitchUserTypes[ message.tags[ \"user-type\" ] ],\n\t\t\t\t\t\t\tuserBadgeInfo: message.tags[ \"badge-info\" ] ? parseBadges( message.tags[ \"badge-info\" ] ) : undefined,\n\t\t\t\t\t\t\tuserBadges: message.tags[ \"badges\" ] ? parseBadges( message.tags[ \"badges\" ] ) : undefined,\n\t\t\t\t\t\t\tuserColor: message.tags[ \"color\" ] || undefined,\n\t\t\t\t\t\t\tmessageType: message.tags[ \"msg-id\" ],\n\t\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\tcase \"subgift\":\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: TwitchEventType.SubGift,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tid: message.tags[ \"id\" ],\n\t\t\t\t\t\t\tdisplayName: message.tags[ \"display-name\" ] || message.tags[ \"login\" ],\n\t\t\t\t\t\t\trecipientDisplayName: message.tags[ \"msg-param-recipient-display-name\" ],\n\t\t\t\t\t\t\trecipientId: message.tags[ \"msg-param-recipient-id\" ],\n\t\t\t\t\t\t\trecipientUsername: message.tags[ \"msg-param-recipient-user-name\" ],\n\t\t\t\t\t\t\tmonths: parseInt( message.tags[ \"msg-param-months\" ] ),\n\t\t\t\t\t\t\tgiftMonths: parseInt( message.tags[ \"msg-param-gift-months\" ] ),\n\t\t\t\t\t\t\tsenderCount: parseInt( message.tags[ \"msg-param-sender-count\" ] || \"0\" ), // How many all-time total gift subs sender has sent the channel\n\t\t\t\t\t\t\tsubPlan: message.tags[ \"msg-param-sub-plan\" ],\n\t\t\t\t\t\t\tsubPlanName: message.tags[ \"msg-param-sub-plan-name\" ],\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-contribution-type\" ] && { goalContributionType: message.tags[ \"msg-param-goal-contribution-type\" ] } ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-current-contributions\" ] && { goalCurrentContributions: parseInt( message.tags[ \"msg-param-goal-current-contributions\" ] ) } ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-description\" ] && { goalDescription: message.tags[ \"msg-param-goal-description\" ] } ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-target-contributions\" ] && { goalTargetContributions: parseInt( message.tags[ \"msg-param-goal-target-contributions\" ] ) } ),\n\t\t\t\t\t\t\t...( message.tags[ \"msg-param-goal-user-contributions\" ] && { goalUserContributions: parseInt( message.tags[ \"msg-param-goal-user-contributions\" ] ) } ),\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t\t\tusername: message.tags[ \"login\" ],\n\t\t\t\t\t\t\tuserId: message.tags[ \"user-id\" ],\n\t\t\t\t\t\t\tuserType: TwitchUserTypes[ message.tags[ \"user-type\" ] ],\n\t\t\t\t\t\t\tuserBadgeInfo: message.tags[ \"badge-info\" ] ? parseBadges( message.tags[ \"badge-info\" ] ) : undefined,\n\t\t\t\t\t\t\tuserBadges: message.tags[ \"badges\" ] ? parseBadges( message.tags[ \"badges\" ] ) : undefined,\n\t\t\t\t\t\t\tuserColor: message.tags[ \"color\" ] || undefined,\n\t\t\t\t\t\t\tmessageType: message.tags[ \"msg-id\" ],\n\t\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\tcase \"giftpaidupgrade\":\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: TwitchEventType.SubGiftContinue,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tid: message.tags[ \"id\" ],\n\t\t\t\t\t\t\tdisplayName: message.tags[ \"display-name\" ] || message.tags[ \"login\" ],\n\t\t\t\t\t\t\tgifterDisplayName: message.tags[ \"msg-param-sender-name\" ] || message.tags[ \"msg-param-sender-login\" ],\n\t\t\t\t\t\t\tgifterUsername: message.tags[ \"msg-param-sender-login\" ],\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t\t\tusername: message.tags[ \"login\" ],\n\t\t\t\t\t\t\tuserId: message.tags[ \"user-id\" ],\n\t\t\t\t\t\t\tuserType: TwitchUserTypes[ message.tags[ \"user-type\" ] ],\n\t\t\t\t\t\t\tuserBadgeInfo: message.tags[ \"badge-info\" ] ? parseBadges( message.tags[ \"badge-info\" ] ) : undefined,\n\t\t\t\t\t\t\tuserBadges: message.tags[ \"badges\" ] ? parseBadges( message.tags[ \"badges\" ] ) : undefined,\n\t\t\t\t\t\t\tuserColor: message.tags[ \"color\" ] || undefined,\n\t\t\t\t\t\t\tmessageType: message.tags[ \"msg-id\" ],\n\t\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\tcase \"raid\":\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: TwitchEventType.Raid,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tid: message.tags[ \"id\" ],\n\t\t\t\t\t\t\tprofileImageURL: message.tags[ \"msg-param-profileImageURL\" ],\n\t\t\t\t\t\t\tdisplayName: message.tags[ \"msg-param-displayName\" ] || message.tags[ \"display-name\" ] || message.tags[ \"msg-param-login\" ] || message.tags[ \"login\" ],\n\t\t\t\t\t\t\tviewers: parseInt( message.tags[ \"msg-param-viewerCount\" ] ),\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t\t\tusername: message.tags[ \"msg-param-login\" ] || message.tags[ \"login\" ],\n\t\t\t\t\t\t\tuserId: message.tags[ \"user-id\" ],\n\t\t\t\t\t\t\tuserType: TwitchUserTypes[ message.tags[ \"user-type\" ] ],\n\t\t\t\t\t\t\tmessageType: message.tags[ \"msg-id\" ],\n\t\t\t\t\t\t\t// TODO: Add flags and badges\n\t\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\tcase \"unraid\":\n\t\t\t\t\tconsole.log( message );\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: TwitchEventType.Unraid,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tid: message.tags[ \"id\" ],\n\t\t\t\t\t\t\tdisplayName: message.tags[ \"display-name\" ] || message.tags[ \"login\" ],\n\t\t\t\t\t\t\tchannel: message.tags[ \"login\" ],\n\t\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t\t\tusername: message.tags[ \"login\" ],\n\t\t\t\t\t\t\tuserId: message.tags[ \"user-id\" ],\n\t\t\t\t\t\t\tuserType: TwitchUserTypes[ message.tags[ \"user-type\" ] ],\n\t\t\t\t\t\t\tuserBadgeInfo: message.tags[ \"badge-info\" ] ? parseBadges( message.tags[ \"badge-info\" ] ) : undefined,\n\t\t\t\t\t\t\tuserBadges: message.tags[ \"badges\" ] ? parseBadges( message.tags[ \"badges\" ] ) : undefined,\n\t\t\t\t\t\t\tuserColor: message.tags[ \"color\" ] || undefined,\n\t\t\t\t\t\t\tmessageType: message.tags[ \"msg-id\" ],\n\t\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\tcase \"viewermilestone\":\n\t\t\t\t\tconsole.log( message );\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: TwitchEventType.ViewerMilestone,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tid: message.tags[ \"id\" ],\n\t\t\t\t\t\t\tdisplayName: message.tags[ \"display-name\" ] || message.tags[ \"login\" ],\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t\t\tusername: message.tags[ \"login\" ],\n\t\t\t\t\t\t\tuserId: message.tags[ \"user-id\" ],\n\t\t\t\t\t\t\tuserType: TwitchUserTypes[ message.tags[ \"user-type\" ] ],\n\t\t\t\t\t\t\tmessageType: message.tags[ \"msg-id\" ],\n\t\t\t\t\t\t\tcategory: message.tags[ \"msg-param-category\" ],\n\t\t\t\t\t\t\tmilestoneId: message.tags[ \"msg-param-id\" ],\n\t\t\t\t\t\t\tmilestoneValue: parseInt( message.tags[ \"msg-param-value\" ] ),\n\t\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log( \"TODO IMPLEMENT COMMAND\", message );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"WHISPER\":\n\t\t\t\t// TODO: Check for OAuth password and scope for reading whispers\n\t\t\t\treturn {\n\t\t\t\t\ttype: TwitchEventType.Whisper,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tdisplayName: message.tags[ \"display-name\" ] || message.tags[ \"login\" ] || parseUsername( message.source ),\n\t\t\t\t\t\tusername: parseUsername( message.source ),\n\t\t\t\t\t\tuserId: message.tags[ \"user-id\" ],\n\t\t\t\t\t\tuserType: TwitchUserTypes[ message.tags[ \"user-type\" ] ],\n\t\t\t\t\t\tuserColor: message.tags[ \"color\" ] || undefined,\n\t\t\t\t\t\tuserBadgeInfo: message.tags[ \"badge-info\" ] ? parseBadges( message.tags[ \"badge-info\" ] ) : undefined,\n\t\t\t\t\t\tuserBadges: message.tags[ \"badges\" ] ? parseBadges( message.tags[ \"badges\" ] ) : undefined,\n\t\t\t\t\t\tmessageEmotes: message.tags[ \"emotes\" ],\n\t\t\t\t\t\tturbo: message.tags[ \"turbo\" ] === \"1\",\n\t\t\t\t\t\tthreadId: message.tags[ \"thread-id\" ],\n\t\t\t\t\t\tmessageId: message.tags[ \"message-id\" ],\n\t\t\t\t\t\tmessage: message.parameters,\n\t\t\t\t\t\tmessageType: \"whisper\",\n\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\tcase \"NOTICE\": // Notice Message IDs: https://dev.twitch.tv/docs/irc/msg-id/\n\t\t\t\t// Check for errors\n\t\t\t\tif( message.parameters?.includes( \"Login unsuccessful\" ) || message.parameters?.includes( \"Login authentication failed\" ) ||\n\t\t\t\t\tmessage.parameters?.includes( \"Error logging in\" ) || message.parameters?.includes( \"Improperly formatted auth\" ) ||\n\t\t\t\t\tmessage.parameters?.includes( \"Invalid NICK\" ) || message.parameters?.includes( \"Invalid CAP REQ\" ) ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: TwitchEventType.Error,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tmessage: message.parameters,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// General Notice Event\n\t\t\t\treturn {\n\t\t\t\t\ttype: TwitchEventType.Notice,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tchannel,\n\t\t\t\t\t\tmsgId: message.tags[ \"msg-id\" ],\n\t\t\t\t\t\tmessage: message.parameters,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\tcase \"CLEARCHAT\":\n\t\t\t\t// Chat Cleared, User Timeout/Ban\n\t\t\t\tif( message.tags[ \"target-user-id\" ] ) {\n\t\t\t\t\tif( message.tags[ \"ban-duration\" ] ) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: TwitchEventType.Timeout,\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t\t\t\tduration: parseInt( message.tags[ \"ban-duration\" ] ),\n\t\t\t\t\t\t\t\tusername: message.parameters,\n\t\t\t\t\t\t\t\tuserId: message.tags[ \"target-user-id\" ],\n\t\t\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: TwitchEventType.Ban,\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t\t\t\tusername: message.parameters,\n\t\t\t\t\t\t\t\tuserId: message.tags[ \"target-user-id\" ],\n\t\t\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: TwitchEventType.ClearChat,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tchannel,\n\t\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ],\n\t\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\tcase \"CLEARMSG\":\n\t\t\t\t// Message Deleted\n\t\t\t\treturn {\n\t\t\t\t\ttype: TwitchEventType.MessageDeleted,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tchannel,\n\t\t\t\t\t\tchannelId: message.tags[ \"room-id\" ], // Room ID seems to be empty for this event\n\t\t\t\t\t\tdisplayName: message.tags[ \"display-name\" ] || message.tags[ \"login\" ],\n\t\t\t\t\t\tusername: message.tags[ \"login\" ],\n\t\t\t\t\t\tid: message.tags[ \"target-msg-id\" ],\n\t\t\t\t\t\tmessage: message.parameters,\n\t\t\t\t\t\ttimestamp: parseInt( message.tags[ \"tmi-sent-ts\" ] ),\n\t\t\t\t\t\textra: message.tags,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\tcase \"PRIVMSG\":\n\t\t\t\t// Chat Message\n\t\t\t\treturn handleChatMessage( message, channel as string );\n\t\t\tcase \"RECONNECT\":  \n\t\t\t\tconsole.log( \"The Twitch IRC server is about to terminate the connection for maintenance.\" )\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t{\n\t\t\t\t\t// Try and parse a numeric command based on RFC1459 (https://www.rfc-editor.org/rfc/rfc1459.html)\n\t\t\t\t\tconst commandNumber = parseInt( commandParts[ 0 ] );\n\t\t\t\t\tif( commandNumber >= 400 ) {\n\t\t\t\t\t\tconsole.debug( `Error IRC command: ${commandNumber}`, message );\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Command & Reserved responses\n\t\t\t\t\t\tswitch( commandNumber ) {\n\t\t\t\t\t\tcase 1:  // Logged in (successfully authenticated). \n\t\t\t\t\t\t\t// console.debug( \"Username:\", channel );\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\tcase 2: // Ignoring all other numeric messages.\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\tcase 353: // Get the names of users in the room\n\t\t\t\t\t\tcase 366: // End of names list\n\t\t\t\t\t\tcase 372: // Message Of The Day\n\t\t\t\t\t\tcase 375: // Message Of The Day Start\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\tcase 376: // End of Message Of The Day\n\t\t\t\t\t\t\treturn { type: TwitchEventType.Connect, data: { username: commandParts[ 1 ] } };\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.debug( \"Unsupported numeric command\", commandNumber );\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.debug( \"Unprocessed IRC message:\", message.raw );\n\t\t}\n\t}\n\tcatch( error ) {\n\t\tconsole.error( error );\n\t\treturn {\n\t\t\ttype: TwitchEventType.Warning,\n\t\t\tdata: error,\n\t\t};\n\t}\n\tconsole.log( message );\n\treturn null;\n}\n\nexport function requestCapabilities( ws : WebSocket ) : void {\n\t// Request Twitch-specific Capabilities\n\t// TODO: consider adding twitch.tv/membership CAP to get JOIN and PART events\n\tws.send( \"CAP REQ :twitch.tv/tags twitch.tv/commands\" );\n}\n\nexport function authenticate( ws : WebSocket, username? : string, password? : string ) : void {\n\tconst ircUsername = password ? username : `justinfan${Math.floor( ( Math.random() * 99998999 ) + 1000 )}`;\n\tconst ircPassword = password || `INSTAFLUFF`;\n\tws.send( `PASS ${ircPassword}` );\n\tws.send( `NICK ${ircUsername}` );\n}\n\nexport function joinChannel( ws : WebSocket, channel : string | string[] ) : void {\n\tif( Array.isArray( channel ) ) {\n\t\t// TODO: Check for too many channels and then split into multiple requests\n\t\tconst channels = channel.map( c => `#${c}` ).join( \",\" );\n\t\tws.send( `JOIN ${channels}` );\n\t}\n\telse {\n\t\tws.send( `JOIN #${channel}` );\n\t}\n}\n\nexport function leaveChannel( ws : WebSocket, channel : string ) : void {\n\tws.send( `PART #${channel}` );\n}\n\nexport function ping( ws : WebSocket ) : void {\n\tws.send( `PING` );\n}\n\nexport function pong( ws : WebSocket ) : void {\n\tws.send( `PONG` );\n}\n\nexport function sendChat( ws : WebSocket, channel : string, message : string ) : void {\n\t// Note: If we want to send tags like client-nonce, then the chat message should look like\n\t//       @client-nonce=asdf;reply-parent-msg-id PRIVMSG #channel :message text here\n\tws.send( `PRIVMSG #${channel} :${message}` );\n}\n\nexport function replyChat( ws : WebSocket, channel : string, messageId : string, message : string ) : void {\n\t// console.debug( `@reply-parent-msg-id=${messageId} PRIVMSG #${channel} :${message}` );\n\tws.send( `@reply-parent-msg-id=${messageId} PRIVMSG #${channel} :${message}` );\n}\n","import { parseMessage } from \"./parse\";\nimport { createWebSocket } from \"./socket\";\nimport { authenticate, joinChannel, leaveChannel, ping, pong, ProcessedMessage, processMessage, replyChat, requestCapabilities, sendChat, TwitchEventType } from \"./twitch\";\n\nexport type TwitchEventHandler = ( context? : any ) => void;\nexport type TwitchChatMode = {\n\temoteOnly : boolean;\n\tfollowersOnly : boolean;\n\tsubscribersOnly : boolean;\n\tr9k : boolean; // Unique Chat Mode\n\tslow : boolean;\n\tlanguage : string;\n};\n\nexport class TwitchEvents {\n\t#ws : WebSocket | undefined;\n\t#username : string;\n\t#password : string | undefined;\n\t#pingTimer : ReturnType<typeof setInterval> | undefined;\n\t#pingTime : number = 0;\n\t#latency : number = -1;\n\tdebug : boolean;\n\treconnects : number = 0;\n\tchannels : string[];\n\tchatModes : { [ channel : string ] : TwitchChatMode } = {};\n\thandlers : Partial<{ [ key in TwitchEventType ] : TwitchEventHandler | undefined }> = {};\n\n\tconstructor( username : string, password? : string, channels? : string[] | string, isDebug? : boolean ) {\n\t\tthis.#username = username;\n\t\tthis.#password = password;\n\t\tthis.debug = !!isDebug;\n\n\t\t// Ensure that channels is an array\n\t\tif( typeof channels === \"string\" || channels instanceof String ) {\n\t\t\tchannels = [ channels as string ];\n\t\t}\n\t\tthis.channels = channels || [ username ]; // Use username as the channel to join by default\n\n\t\t// Connect to the server\n\t\tthis.#connect();\n\t}\n\n\tget #mainChannel() : string { return this.channels[ 0 ]; }\n\tget #isConnected() : boolean { return !!( this.#ws && this.#ws.readyState === this.#ws.OPEN ); }\n\tget version() : string { return \"2.0.0\"; }\n\tget latency() : number { return this.#latency; }\n\tget ws() : WebSocket | undefined { return this.#ws; }\n\n\ton( eventType : TwitchEventType, handler : ( context? : any ) => void ) {\n\t\tthis.handlers[ eventType ] = handler;\n\t}\n\n\tsay( message : string, channel? : string ) : void {\n\t\tif( !this.#ws ) { return; }\n\t\tif( !this.#isConnected ) { return; }\n\n\t\tsendChat( this.#ws, channel || this.#mainChannel, message );\n\t}\n\n\treply( messageId : string, message : string, channel? : string ) : void {\n\t\tif( !this.#ws ) { return; }\n\t\tif( !this.#isConnected ) { return; }\n\n\t\treplyChat( this.#ws, channel || this.#mainChannel, messageId, message );\n\t}\n\n\tjoin( channel : string | string[] ) : void {\n\t\tif( !this.#ws ) { return; }\n\t\tif( !this.#isConnected ) { return; }\n\n\t\tjoinChannel( this.#ws, channel );\n\t\t// TODO: add channel to this.channels\n\t}\n\n\tleave( channel : string ) : void {\n\t\tif( !this.#ws ) { return; }\n\t\tif( !this.#isConnected ) { return; }\n\n\t\tleaveChannel( this.#ws, channel );\n\t\t// TODO: remove channel from this.channels\n\t}\n\n\tdeleteMessage( messageId : string, channel? : string ) : void {\n\t\tif( !this.#ws ) { return; }\n\t\tif( !this.#isConnected ) { return; }\n\n\t\t// TODO: This requires an API call\n\t\t// https://dev.twitch.tv/docs/api/reference/#delete-chat-messages\n\t}\n\n\tsimulateIRCMessage( message : string ) : void {\n\t\tif( !this.#ws ) { return; }\n\t\tif( !this.#isConnected ) { return; }\n\n\t\tthis.#onMessage( { \"data\": message } as MessageEvent );\n\t}\n\n\t#connect() {\n\t\tif( this.#isConnected ) { return; } // Already connected\n\n\t\tconst TwitchServerWSS = \"wss://irc-ws.chat.twitch.tv:443\";\n\t\t// const TwitchServerWS = \"ws://irc-ws.chat.twitch.tv:80\";\n\n\t\tthis.#ws = createWebSocket( TwitchServerWSS, \"irc\" );\n\t\tthis.#ws.onopen = () => { this.#onOpen(); };\n\t\tthis.#ws.onmessage = ( event ) => { this.#onMessage( event ); };\n\t\tthis.#ws.onerror = ( event ) => { this.#onError( event ); };\n\t\tthis.#ws.onclose = ( event ) => { this.#onClose( event ); };\n\t}\n\n\t#onOpen() {\n\t\tif( !this.#ws ) { return; }\n\t\tif( !this.#isConnected ) { return; }\n\n\t\trequestCapabilities( this.#ws );\n\t\tauthenticate( this.#ws, this.#username, this.#password );\n\t}\n\n\t#onError( event : Event ) {\n\t\tconsole.error( \"ERROR\", event );\n\t}\n\n\t#onClose( event : Event ) {\n\t\tconsole.info( \"CLOSE\", event );\n\t\tif( this.#pingTimer ) {\n\t\t\tclearInterval( this.#pingTimer );\n\t\t}\n\t}\n\n\t#ping() {\n\t\tif( !this.#ws ) { return; }\n\t\tif( !this.#isConnected ) { return; }\n\n\t\tthis.#pingTime = Date.now();\n\t\tping( this.#ws );\n\t}\n\n\t#handleSpecialEvents( message : ProcessedMessage ) {\n\t\tif( !this.#ws ) { return; }\n\t\tif( !this.#isConnected ) { return; }\n\n\t\tswitch( message.type ) {\n\t\tcase TwitchEventType.Connect:\n\t\t\tthis.#username = message.data.username;\n\t\t\t// Setup the keep-alive ping timer\n\t\t\tif( this.#pingTimer ) {\n\t\t\t\tclearInterval( this.#pingTimer );\n\t\t\t}\n\t\t\tthis.#pingTimer = setInterval( () => {\n\t\t\t\tthis.#ping();\n\t\t\t}, 60000 );\n\t\t\t// Get the base hostname from the url\n\t\t\tconst hostUrl = new URL( this.#ws.url );\n\t\t\tmessage.data[ \"address\" ] = hostUrl.host;\n\t\t\tmessage.data[ \"port\" ] = hostUrl.protocol === \"wss:\" ? 443 : 80;\n\t\t\tmessage.data[ \"isFirstConnect\" ] = this.reconnects === 0;\n\n\t\t\t// Join the channels\n\t\t\tjoinChannel( this.#ws, this.channels );\n\t\t\tbreak;\n\t\tcase TwitchEventType.Ping:\n\t\t\tpong( this.#ws );\n\t\t\tbreak;\n\t\tcase TwitchEventType.Pong:\n\t\t\t// Calculate and attach latency to the data\n\t\t\tmessage.data = message.data || {};\n\t\t\tthis.#latency = message.data[ \"latency\" ] = ( Date.now() - this.#pingTime ); // Latency in milliseconds\n\t\t\tbreak;\n\t\tcase TwitchEventType.RoomState:\n\t\t\t// Save ChatMode for the room at the first message and then diff the notifications afterwards\n\t\t\t// e.g. emoteOnly & followersOnly are both sent in the initial message but then enabling/disabling emoteOnly doesn't send the followersOnly mode flag\n\t\t\tthis.chatModes[ message.data.channel ] = {\n\t\t\t\t...this.chatModes[ message.data.channel ],\n\t\t\t\t...message.data,\n\t\t\t};\n\t\t\t// TODO: delete chatMode when leaving a channel\n\t\t\tif( this.handlers[ TwitchEventType.ChatMode ] ) {\n\t\t\t\tthis.handlers[ TwitchEventType.ChatMode ]!( this.chatModes[ message.data.channel ] );\n\t\t\t}\n\t\t\tbreak;\n\t\t// case TwitchEventType.Reconnect:\n\t\t// \tthis.#connect();\n\t\t// \tbreak;\n\t\t// case TwitchEventType.Join:\n\t\t// \tif( message.channel ) {\n\t\t// \t\tthis.channels.push( message.channel );\n\t\t// \t}\n\t\t// \tbreak;\n\t\tcase TwitchEventType.Error:\n\t\t\tthis.#ws.close();\n\t\t\tbreak;\n\t\tcase TwitchEventType.Whisper:\n\t\t\t// Add the self flag to the messageData\n\t\t\tmessage.data.self = message.data.username === this.#username;\n\t\t\tbreak;\n\t\tcase TwitchEventType.Chat:\n\t\t\t// Add the self flag to the messageData\n\t\t\tmessage.data.self = message.data.username === this.#username;\n\t\t\t// Check if there is a reply handler and this is a reply message\n\t\t\tif( this.handlers[ TwitchEventType.Reply ] && message.data.extra[ \"reply-parent-msg-id\" ] ) {\n\t\t\t\tthis.handlers[ TwitchEventType.Reply ]!( {\n\t\t\t\t\t...message.data,\n\t\t\t\t\tparentId: message.data.extra[ \"reply-parent-msg-id\" ],\n\t\t\t\t\tparentUserId: message.data.extra[ \"reply-parent-user-id\" ],\n\t\t\t\t\tparentUser: message.data.extra[ \"reply-parent-user-login\" ],\n\t\t\t\t\tparentMessage: message.data.extra[ \"reply-parent-msg-body\" ],\n\t\t\t\t\tparentDisplayName: message.data.extra[ \"reply-parent-display-name\" ] || message.data.extra[ \"reply-parent-user-login\" ],\n\t\t\t\t} );\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t#onMessage( event : MessageEvent<any> ) {\n\t\tif( !this.#ws ) { return; }\n\t\tif( !this.#isConnected ) { return; }\n\n\t\tconst parts = event.data.trim().split( `\\r\\n` );\n\t\tfor( const str of parts ) {\n\t\t\tconst message = processMessage( parseMessage( str ) );\n\t\t\tif( message && message.type !== TwitchEventType.None ) {\n\t\t\t\t// console.log( message );\n\t\t\t\t// Handle special events\n\t\t\t\tthis.#handleSpecialEvents( message );\n\n\t\t\t\t// Send the event to handlers\n\t\t\t\tif( this.handlers[ message.type ] ) {\n\t\t\t\t\tthis.handlers[ message.type ]!( message.data );\n\t\t\t\t}\n\t\t\t\t// Also send to the \"all\" event handler if it exists\n\t\t\t\tif( this.handlers[ TwitchEventType.All ] ) {\n\t\t\t\t\tthis.handlers[ TwitchEventType.All ]!( {\n\t\t\t\t\t\tevent: message.type,\n\t\t\t\t\t\t...message.data,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\t// console.debug( message );\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tif( this.#ws && this.#ws.readyState !== this.#ws.CLOSED ) {\n\t\t\tthis.#ws.close();\n\t\t}\n\t}\n}\n","// Comfy.JS v2.0.0\nimport { TwitchEvents } from \".\";\nimport { TwitchEventType } from \"./twitch\";\n\nexport type ComfyJSInstance = {\n\tversion: () => string;\n\tlatency: () => number;\n\tgetInstance: () => TwitchEvents | undefined;\n\tonConnected: ( address : string, port : number, isFirstConnect : boolean ) => void;\n\tonReconnect: ( reconnectCount : number ) => void;\n\tonError: ( error : Error ) => void;\n\tonCommand: ( user : string, command : string, message : string, flags : any, extra : any ) => void;\n\tonChat: ( user : string, message : string, flags : any, self : boolean, extra : any ) => void;\n\tonWhisper: ( user : string, message : string, flags : any, self : boolean, extra : any ) => void;\n\tonCheer: ( user : string, message : string, bits : number, flags : any, extra : any ) => void;\n\tonSub: ( user : string, message : string, subTierInfo : any, extra : any ) => void;\n\tonResub: ( user : string, message : string, streamMonths : number, cumulativeMonths : number, subTierInfo : any, extra : any ) => void;\n\tonSubGift: ( gifterUser : string, streakMonths : number, recipientUser : string, senderCount : number, subTierInfo : any, extra : any ) => void;\n\tonSubMysteryGift: ( gifterUser : string, numbOfSubs : number, senderCount : number, subTierInfo : any, extra : any ) => void;\n\tonGiftSubContinue: ( user : string, sender : string, extra : any ) => void;\n\tonTimeout: ( user : string, duration : number, extra : any ) => void;\n\tonBan: ( user : string, extra : any ) => void;\n\tonMessageDeleted: ( messageId : string, extra : any ) => void;\n\tonRaid: ( user : string, viewers : number, extra : any ) => void;\n\tonUnraid: ( channel : string, extra : any ) => void;\n\tsimulateIRCMessage: ( message : string ) => void;\n\tInit: ( username : string, password? : string, channels? : string[] | string, isDebug? : boolean ) => void;\n};\n\nlet twitchEvents : TwitchEvents | undefined;\n\nfunction parseMessageEmotes( messageEmotes : string ) : any | null {\n\tif( messageEmotes ) {\n\t\tconst emotes = messageEmotes.split( \"/\" );\n\t\tconst emoteMap : any = {};\n\t\tfor( const emote of emotes ) {\n\t\t\tconst [ id, positions ] = emote.split( \":\" );\n\t\t\temoteMap[ id ] = positions.split( \",\" );\n\t\t}\n\t\treturn emoteMap;\n\t}\n\treturn null;\n}\n\nfunction convertContextToUserState( context : any ) : { [ key : string ] : string } {\n\tconst userState : any = {};\n\tfor( const key in context.extra ) {\n\t\tif( context.extra[ key ] === \"\" ) {\n\t\t\tuserState[ key ] = null;\n\t\t}\n\t\telse if( context.extra[ key ] === \"1\" ) {\n\t\t\tuserState[ key ] = true;\n\t\t}\n\t\telse if( context.extra[ key ] === \"0\" ) {\n\t\t\tuserState[ key ] = false;\n\t\t}\n\t\telse {\n\t\t\tuserState[ key ] = context.extra[ key ];\n\t\t}\n\t}\n\tuserState[ \"badge-info-raw\" ] = userState[ \"badge-info\" ];\n\tuserState[ \"badge-info\" ] = context.userBadgeInfo || null;\n\tuserState[ \"badges-raw\" ] = userState.badges;\n\tuserState.badges = context.userBadges || null;\n\tuserState[ \"emotes-raw\" ] = userState.emotes;\n\tuserState.emotes = parseMessageEmotes( context.messageEmotes );\n\tuserState.username = context.username;\n\tuserState[ \"message-type\" ] = context.messageType;\n\treturn userState;\n}\n\nconst comfyJS : ComfyJSInstance = {\n\tversion: () => { return \"2.0.0\"; },\n\tlatency: () => { return twitchEvents ? twitchEvents.latency : -1; },\n\tgetInstance: () => { return twitchEvents; },\n\tonConnected: ( address : string, port : number, isFirstConnect : boolean ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onConnected default handler\" );\n\t\t}\n\t},\n\tonReconnect: ( reconnectCount : number ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onReconnect default handler\" );\n\t\t}\n\t},\n\tonError: ( error : Error ) => {\n\t\tconsole.error( \"Error:\", error );\n\t},\n\tonCommand: ( user : string, command : string, message : string, flags : any, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onCommand default handler\" );\n\t\t}\n\t},\n\tonChat: ( user : string, message : string, flags : any, self : boolean, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onChat default handler\" );\n\t\t}\n\t},\n\tonCheer: ( user : string, message : string, bits : number, flags : any, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onCheer default handler\" );\n\t\t}\n\t},\n\tonWhisper: ( user : string, message : string, flags : any, self : boolean, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onWhisper default handler\" );\n\t\t}\n\t},\n\tonSub: ( user : string, message : string, subTierInfo : any, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onSub default handler\" );\n\t\t}\n\t},\n\tonResub: ( user : string, message : string, streamMonths : number, cumulativeMonths : number, subTierInfo : any, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onResub default handler\" );\n\t\t}\n\t},\n\tonSubGift: ( gifterUser : string, streakMonths : number, recipientUser : string, senderCount : number, subTierInfo : any, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onSubGift default handler\" );\n\t\t}\n\t},\n\tonSubMysteryGift: ( gifterUser : string, numbOfSubs : number, senderCount : number, subTierInfo : any, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onSubMysteryGift default handler\" );\n\t\t}\n\t},\n\tonGiftSubContinue: ( user : string, sender : string, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onGiftSubContinue default handler\" );\n\t\t}\n\t},\n\tonTimeout: ( user : string, duration : number, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onTimeout default handler\" );\n\t\t}\n\t},\n\tonBan: ( user : string, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onBan default handler\" );\n\t\t}\n\t},\n\tonMessageDeleted: ( messageID : string, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onMessageDeleted default handler\" );\n\t\t}\n\t},\n\tonRaid: ( user : string, viewers : number, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onRaid default handler\" );\n\t\t}\n\t},\n\tonUnraid: ( channel : string, extra : any ) => {\n\t\tif( twitchEvents && twitchEvents.debug ) {\n\t\t\tconsole.debug( \"onUnraid default handler\" );\n\t\t}\n\t},\n\tsimulateIRCMessage: ( message : string ) => {\n\t\tif( twitchEvents ) {\n\t\t\ttwitchEvents.simulateIRCMessage( message );\n\t\t}\n\t},\n\tInit: ( username : string, password? : string, channels? : string[] | string, isDebug? : boolean ) => {\n\t\ttwitchEvents = new TwitchEvents( username, password, channels, isDebug );\n\t\ttwitchEvents.on( TwitchEventType.Connect, ( context? : any ) => {\n\t\t\tcomfyJS.onConnected( context.address, context.port, context.isFirstConnect );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.Reconnect, ( context? : any ) => {\n\t\t\tconsole.log( \"RECONNECT\" );\n\t\t\tcomfyJS.onReconnect( context.reconnectCount );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.Error, ( error : Error ) => {\n\t\t\tcomfyJS.onError( error );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.Command, ( context? : any ) => {\n\t\t\tcomfyJS.onCommand( context.displayName || context.username, context.command, context.message, context.flags, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ) } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.Chat, ( context? : any ) => {\n\t\t\tcomfyJS.onChat( context.displayName || context.username, context.message, context.flags, context.self, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ) } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.Whisper, ( context? : any ) => {\n\t\t\tcomfyJS.onWhisper( context.displayName || context.username, context.message, context.flags, context.self, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, channel: context.username, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ) } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.Cheer, ( context? : any ) => {\n\t\t\tcomfyJS.onCheer( context.displayName || context.username, context.message, context.bits, context.flags, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ) } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.Subscribe, ( context? : any ) => {\n\t\t\tcomfyJS.onSub( context.displayName || context.username, context.message, { prime: context.subPlan === \"Prime\", plan: context.subPlan, planName: context.subPlanName || null }, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ) } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.Resubscribe, ( context? : any ) => {\n\t\t\tcomfyJS.onResub( context.displayName || context.username, context.message, context.streakMonths || 0, context.cumulativeMonths, { prime: context.subPlan === \"Prime\", plan: context.subPlan, planName: context.subPlanName || null }, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ) } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.SubGift, ( context? : any ) => {\n\t\t\tcomfyJS.onSubGift( context.displayName || context.username, context.streakMonths || 0, context.recipientDisplayName, context.senderCount, { prime: context.subPlan === \"Prime\", plan: context.subPlan, planName: context.subPlanName || null }, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ) } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.MysterySubGift, ( context? : any ) => {\n\t\t\tcomfyJS.onSubMysteryGift( context.displayName || context.username, context.giftCount, context.senderCount, { prime: context.subPlan === \"Prime\", plan: context.subPlan, planName: context.subPlanName || null }, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ), userMassGiftCount: context.giftCount } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.SubGiftContinue, ( context? : any ) => {\n\t\t\tcomfyJS.onGiftSubContinue( context.displayName || context.username, context.gifterDisplayName, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ) } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.Timeout, ( context? : any ) => {\n\t\t\tcomfyJS.onTimeout( context.displayName || context.username, context.duration, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ), timedOutUserId: context.userId } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.Ban, ( context? : any ) => {\n\t\t\tcomfyJS.onBan( context.displayName || context.username, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ), bannedUserId: context.userId } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.MessageDeleted, ( context? : any ) => {\n\t\t\tcomfyJS.onMessageDeleted( context.id, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ) } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.Raid, ( context? : any ) => {\n\t\t\tcomfyJS.onRaid( context.displayName || context.username, context.viewers, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ) } );\n\t\t} );\n\t\ttwitchEvents.on( TwitchEventType.Unraid, ( context? : any ) => {\n\t\t\tcomfyJS.onUnraid( context.channel, { ...context, userState: convertContextToUserState( context ), extra: null, flags: context.extra?.flags, roomId: context.channelId, messageEmotes: parseMessageEmotes( context.messageEmotes ) } );\n\t\t} );\n\t},\n};\n\ndeclare global {\n\tinterface Window {\n\t\tComfyJSNew: ComfyJSInstance;\n\t}\n}\n\n// Expose everything, for browser and Node..\nif( typeof module !== \"undefined\" && module.exports ) {\n\tmodule.exports = comfyJS;\n}\n\nif( typeof window !== \"undefined\" ) {\n\twindow.ComfyJSNew = comfyJS;\n}\n"],"names":["unescapeIRC","text","_","char","extractComponent","message","index","nextSpace","parseMessage","parsedMessage","component","nextIndex","tag","tagSplitIndex","key","value","rawCommand","commandEnd","parameterIndex","_WebSocket","createWebSocket","server","protocols","TwitchEventType","TwitchUserTypes","parseUsername","source","parts","parseBadges","badgesTag","badgeList","badges","badge","name","version","parseMessageFlags","flagsTag","flagsList","flags","flag","label","category","level","handleChatMessage","channel","isAction","_a","sanitizedMessage","_b","id","channelId","userId","username","displayName","userType","badgeInfo","userColor","emotes","messageFlags","contentFlags","isBroadcaster","isMod","isFounder","isSubscriber","isTurbo","isVIP","isPrime","isPartner","isGameDeveloper","timestamp","isEmoteOnly","isHighlightedMessage","isSkipSubsModeMessage","customRewardId","isFirstMessage","isReturningChatter","msgParts","command","msg","processMessage","commandParts","_c","_d","_e","_f","commandNumber","error","requestCapabilities","ws","authenticate","password","ircUsername","ircPassword","joinChannel","channels","c","leaveChannel","ping","pong","sendChat","replyChat","messageId","TwitchEvents","isDebug","__privateAdd","_mainChannel","_isConnected","_connect","_onOpen","_onError","_onClose","_ping","_handleSpecialEvents","_onMessage","_ws","_username","_password","_pingTimer","_pingTime","_latency","__privateSet","__privateMethod","connect_fn","__privateGet","eventType","handler","isConnected_get","mainChannel_get","onMessage_fn","onOpen_fn","event","onError_fn","onClose_fn","ping_fn","handleSpecialEvents_fn","hostUrl","str","twitchEvents","parseMessageEmotes","messageEmotes","emoteMap","emote","positions","convertContextToUserState","context","userState","comfyJS","address","port","isFirstConnect","reconnectCount","user","extra","self","bits","subTierInfo","streamMonths","cumulativeMonths","gifterUser","streakMonths","recipientUser","senderCount","numbOfSubs","sender","duration","messageID","viewers"],"mappings":"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"}